dashboard=管理面板
version=版本
template=模板
notifications=通知

username=用户名


repository=仓库
organization=组织
new_org=创建新的组织
settings=组织设置
your_settings=组织设置

all=所有
forks=派生数

issues=工单数

cancel=取消
remove=移除成员
edit=修改

enabled=启用
disabled=禁用


write=写入





[aria]

[filter]

[error]

[startpage]

[install]
install=安装
title=初始配置
host=主机
user=用户名
db_schema=架构模式
ssl_mode=SSL
path=数据库路径

app_name=站点名称
repo_path=仓库根目录
run_user=以用户名运行
domain=服务器域名
app_url=Gitea 基本 URL
log_root_path=日志路径

smtp_addr=SMTP 主机地址
smtp_port=SMTP 主机端口
register_confirm=需要电子邮件确认注册
mail_notify=启用邮件通知
disable_gravatar=禁用 Gravatar 头像
federated_avatar_lookup=启用 Federated Avatars
disable_registration=禁止用户注册
allow_only_external_registration_popup=仅允许通过外部服务注册
openid_signin=启用 OpenID 登录
openid_signup=启用 OpenID 自注册
require_sign_in_view=启用登录访问限制
default_keep_email_private=默认情况下隐藏电子邮件地址
default_allow_create_organization=默认情况下允许创建组织
default_enable_timetracking=默认情况下启用时间跟踪
no_reply_address=隐藏电子邮件域

[home]
my_repos=仓库管理


show_private=私有库


[explore]
repos=仓库管理
organizations=组织管理
code=代码


[auth]

[mail]












[modal]

[form]
UserName=用户名

Content=密钥文本







[user]
repositories=仓库管理
code=代码


[settings]
repos=仓库管理
organization=组织管理

full_name=组织全名
website=网站
location=所在地区
cancel=取消
comment_type_group_title=标题



primary=主要的
activated=已激活
delete_email=移除成员

gpg_token=令牌
ssh_token=令牌
key_content=密钥文本
principal_content=密钥文本
delete_key=移除成员
can_read_info=已读消息
can_write_info=写入

delete_token=刪除
access_token_deletion_cancel_action=取消
access_token_deletion_confirm_action=刪除

oauth2_client_secret=客户端密钥
oauth2_application_edit=修改







confirm_delete_account=确认删除组织
delete_account_title=删除帐户

email_notifications.enable=启用邮件通知

visibility.public=公开
visibility.limited=受限
visibility.private=私有库

[repo]
owner=管理员
template=模板
visibility=可见性
repo_desc=组织描述
license=许可协议
forks=派生数
delete_preexisting_label=刪除


desc.private=私有库
desc.public=公开
desc.public_template=模板

template.webhooks=Web 钩子



migrate_items_labels=标签
migrate_items_issues=工单数
migrate_items_releases=版本发布



code=代码
branches=分支
tags=Git标签
issues=工单数
packages=软件包
labels=标签

releases=版本发布
tag=标签


editor.cancel_lower=取消
editor.cancel=取消
editor.branch_already_exists=此仓库已存在名为 '%s' 的分支。

commits.author=作者



projects.description_placeholder=组织描述
projects.title=标题

issues.new.labels=标签
issues.new_label_desc_placeholder=组织描述
issues.filter_poster=作者
issues.filter_type=类型
issues.draft_title=草稿
issues.context.edit=修改
issues.context.delete=刪除
issues.create_comment=评论
issues.owner=管理员
issues.edit=修改
issues.cancel=取消
issues.label_title=名称
issues.label_description=组织描述
issues.label_edit=修改
issues.label_delete=刪除
issues.lock_confirm=锁定
issues.delete=刪除
issues.add_time_cancel=取消
issues.due_date_form_edit="修改"
issues.due_date_form_remove="移除成员"
issues.dependency.title=依赖
issues.dependency.cancel=取消
issues.dependency.remove=移除成员
issues.review.review=评审




; </summary><code>%[2]s<br>%[3]s</code></details>
pulls.status_checks_details=详情





milestones.title=标题
milestones.desc=组织描述
milestones.cancel=取消



wiki.edit_page_button=修改

activity.period.daily=1 天
activity.period.weekly=1周
activity.period.monthly=1 个月
activity.period.yearly=1年
activity.published_release_label=已发布


settings=组织设置
settings.options=仓库
settings.collaboration.write=写入
settings.collaboration.read=已读消息
settings.collaboration.owner=管理员
settings.hooks=Web 钩子
settings.site=网站
settings.update_settings=更新组织设置
settings.enable_timetracker=启用时间跟踪
settings.allow_only_contributors_to_track_time=仅允许成员跟踪时间
settings.delete_collaborator=移除成员
settings.teams=组织团队
settings.webhook_deletion=删除 Web 钩子
settings.webhook.payload=密钥文本
settings.slack_username=用户名
settings.slack_icon_url=图标 URL
settings.discord_username=用户名
settings.discord_icon_url=图标 URL
settings.event_delete=刪除
settings.event_repository=仓库
settings.event_issues=工单数
settings.authorization_header=授权标头
settings.authorization_header_desc=当存在时将被作为授权标头包含在内。例如: %s。
settings.active=激活
settings.active_helper=触发事件的信息将发送到此 webhook 网址。
settings.add_hook_success=Web 钩子添加成功！
settings.update_webhook=更新 Web 钩子
settings.update_hook_success=Web 钩子更新成功！
settings.delete_webhook=删除 Web 钩子
settings.recent_deliveries=最近推送记录
settings.hook_type=钩子类型
settings.slack_token=令牌
settings.slack_domain=域名
settings.slack_channel=频道
settings.add_web_hook_desc="将 <a target=\"_blank\" rel=\"noreferrer\" href=\"%s\">%s</a> 集成到您的代码库。"
settings.web_hook_name_gitea=Gitea
settings.web_hook_name_gogs=Gogs
settings.web_hook_name_slack=Slack
settings.web_hook_name_discord=Discord
settings.web_hook_name_dingtalk=钉钉
settings.web_hook_name_telegram=Telegram
settings.web_hook_name_matrix=Matrix
settings.web_hook_name_msteams=Microsoft Teams
settings.web_hook_name_feishu_or_larksuite=飞书 / Lark Suite
settings.web_hook_name_feishu=飞书
settings.web_hook_name_larksuite=Lark Suite
settings.web_hook_name_wechatwork=企业微信
settings.web_hook_name_packagist=Packagist
settings.packagist_username=Packagist 用户名
settings.packagist_api_token=API 令牌
settings.packagist_package_url=Packagist 软件包 URL
settings.deploy_keys=部署密钥
settings.add_deploy_key=添加部署密钥
settings.deploy_key_desc=部署密钥具有对仓库的只读拉取权限。
settings.is_writable=启用写权限
settings.is_writable_info=允许此部署密钥 <strong>推送</strong> 提交到仓库。
settings.no_deploy_keys=没有部署密钥。
settings.title=标题
settings.deploy_key_content=密钥文本
settings.key_been_used=具有相同内容的部署密钥已在使用中。
settings.key_name_used=使用相同名称的部署密钥已经存在！
settings.add_key_success=部署密钥 '%s' 添加成功。
settings.deploy_key_deletion=删除部署密钥
settings.deploy_key_deletion_desc=删除部署密钥将取消此密钥对此仓库的访问权限。继续？
settings.deploy_key_deletion_success=部署密钥已删除。
settings.branches=分支
settings.protected_branch=分支保护
settings.protected_branch_can_push=允许推吗？
settings.protected_branch_can_push_yes=你可以推
settings.branch_protection=分支 '<b>%s</b>' 的分支保护
settings.protect_this_branch=启用分支保护
settings.protect_this_branch_desc=阻止删除并限制Git推送和合并到分支。
settings.protect_disable_push=禁用推送
settings.protect_disable_push_desc=此分支不允许推送。
settings.protect_enable_push=启用推送
settings.protect_enable_push_desc=任何拥有写访问权限的人将被允许推送到此分支(但不能强行推送)。
settings.protect_whitelist_committers=受白名单限制的推送
settings.protect_whitelist_committers_desc=只有列入白名单的用户或团队才能被允许推送到此分支(但不能强行推送)。
settings.protect_whitelist_deploy_keys=具有推送权限的部署密钥白名单。
settings.protect_whitelist_users=推送白名单用户：
settings.protect_whitelist_search_users=搜索用户...
settings.protect_whitelist_teams=推送白名单团队：
settings.protect_whitelist_search_teams=搜索团队...
settings.protect_merge_whitelist_committers=启用合并白名单
settings.protect_merge_whitelist_committers_desc=仅允许白名单用户或团队合并合并请求到此分支。
settings.protect_merge_whitelist_users=合并白名单用户：
settings.protect_merge_whitelist_teams=合并白名单团队：
settings.protect_check_status_contexts=启用状态检查
settings.protect_check_status_contexts_desc=要求状态检查通过才能合并，选择必须先通过哪些状态检查才能合并。如果启用，推送的合并请求必须先通过状态检查才能够合并到对应的分支。如果没有选择具体的状态检查上下文，则所有的状态检查都通过才能合并。
settings.protect_check_status_contexts_list=此仓库上周进行过的状态检查
settings.protect_required_approvals=所需的批准：
settings.protect_required_approvals_desc=只允许合并有足够审核人数的拉取请求。
settings.protect_approvals_whitelist_enabled=批准仅限列入白名单的用户或团队
settings.protect_approvals_whitelist_enabled_desc=只有白名单用户或团队的审核才能计数。 没有批准的白名单，来自任何有写访问权限的人的审核都将计数。
settings.protect_approvals_whitelist_users=审查者白名单：
settings.protect_approvals_whitelist_teams=审查团队白名单：
settings.dismiss_stale_approvals=取消过时的批准
settings.dismiss_stale_approvals_desc=当新的提交更改合并请求内容被推送到分支时，旧的批准将被撤销。
settings.require_signed_commits=需要签名提交
settings.require_signed_commits_desc=拒绝推送未签名或无法验证的提交到分支
settings.protect_protected_file_patterns=受保护的文件模式(使用分号分隔)
settings.protect_protected_file_patterns_desc="即使用户有权在此分支中添加、编辑或删除文件，也不允许直接更改受保护文件。 可以使用分号分隔多个模式 ('\;')。语法文档见 <a href=\"https://pkg.go.dev/github.com/gobwas/glob#Compile\">github.com/gobwas/glob</a>。示例：<code>.drone.yml</code>，<code>/docs/**/*.txt</code>。"
settings.protect_unprotected_file_patterns="不受保护的文件模式 (使用分号 '\;' 分隔)："
settings.protect_unprotected_file_patterns_desc="允许有写入权限的用户进行直接更改的不受保护的文件，可以绕过推送限制。可用分号 ('\;') 分隔多个模式。模式语法参见 <a href=\"https://pkg.go.dev/github.com/gobwas/glob#Compile\">github.com/gobwas/glob</a>文档。示例：<code>.drone.yml</code>,<code>/docs/**/*.txt</code>。"
settings.add_protected_branch=启用保护
settings.delete_protected_branch=禁用保护
settings.protected_branch_deletion_desc=禁用分支保护允许具有写入权限的用户推送提交到此分支。继续？
settings.block_rejected_reviews=拒绝审核阻止了此合并
settings.block_rejected_reviews_desc=如果官方审查人员要求作出改动，即使有足够的批准，合并也不允许。
settings.block_on_official_review_requests=有官方审核阻止了代码合并
settings.block_on_official_review_requests_desc=处于评审状态时，即使有足够的批准，也不能合并。
settings.block_outdated_branch=如果拉取请求已经过时，阻止合并
settings.block_outdated_branch_desc=当头部分支落后基础分支时，不能合并。
settings.default_branch_desc=请选择一个默认的分支用于合并请求和提交：
settings.choose_branch=选择一个分支...
settings.no_protected_branch=没有受保护的分支
settings.edit_protected_branch=修改
settings.protected_branch_required_approvals_min=所需的审批数不能为负数。
settings.tags=Git标签
settings.tags.protection=Git标签保护
settings.tags.protection.pattern=Git标签模式
settings.tags.protection.allowed=允许列表
settings.tags.protection.allowed.users=允许的账号
settings.tags.protection.allowed.teams=允许的团队
settings.tags.protection.allowed.noone=无
settings.tags.protection.create=保护Git标签
settings.tags.protection.none=没有受保护的Git标签
settings.tags.protection.pattern.description="你可以使用单个名称或 glob 模式匹配或正则表达式来匹配多个标签。了解更多请阅读 <a target=\"_blank\" rel=\"noopener\" href=\"https://docs.gitea.io/en-us/protected-tags/\"> 受保护Git标签指南</a>"
settings.bot_token=Bot 令牌
settings.chat_id=聊天 ID
settings.matrix.homeserver_url=主服务器网址
settings.matrix.room_id=房间ID
settings.matrix.message_type=消息类型
settings.archive.button=归档仓库
settings.archive.header=归档此仓库
settings.archive.text=归档后仓库将只有只读权限，并在仪表盘中被隐藏。你将不能再对其建立提交、创建工单或建立合并请求。
settings.archive.success=仓库已成功归档。
settings.archive.error=仓库在归档时出现异常。请通过日志获取详细信息。
settings.archive.error_ismirror=请不要对镜像仓库归档，谢谢！
settings.archive.branchsettings_unavailable=已归档仓库无法进行分支设置。
settings.archive.tagsettings_unavailable=已归档仓库的Git标签设置不可用。
settings.unarchive.button=撤销仓库归档
settings.unarchive.header=撤销此仓库归档
settings.unarchive.text=取消存档将恢复仓库接收提交，推送，新工单和合并请求。
settings.unarchive.success=仓库已成功取消归档。
settings.unarchive.error=仓库在撤销归档时出现异常。请通过日志获取详细信息。
settings.update_avatar_success=仓库头像已经更新。
settings.lfs=LFS
settings.lfs_filelist=存储在此仓库中的 LFS 文件
settings.lfs_no_lfs_files=此仓库中没有 LFS 文件
settings.lfs_findcommits=查找提交
settings.lfs_lfs_file_no_commits=没有找到关于此 LFS 文件的提交
settings.lfs_noattribute=此路径在默认分支中没有可锁定的属性
settings.lfs_delete=删除 OID 为 %s 的 LFS 文件
settings.lfs_delete_warning=删除一个 LFS 文件可能导致签出时显示'对象不存在'的错误。确定继续吗？
settings.lfs_findpointerfiles=查找指针文件
settings.lfs_locks=锁定
settings.lfs_invalid_locking_path=无效路径：%s
settings.lfs_invalid_lock_directory=无法锁定目录：%s
settings.lfs_lock_already_exists=锁已经存在：%s
settings.lfs_lock=锁定
settings.lfs_lock_path=要锁定的文件路径...
settings.lfs_locks_no_locks=无锁定
settings.lfs_lock_file_no_exist=锁定的文件在默认分支中不存在
settings.lfs_force_unlock=强制解锁
settings.lfs_pointers.found=找到 %d 个块指针 - %d 个关联， %d 个未关联(%d 个从仓库丢失)
settings.lfs_pointers.sha=Blob SHA
settings.lfs_pointers.oid=OID
settings.lfs_pointers.inRepo=在仓库中
settings.lfs_pointers.exists=在仓库中存在
settings.lfs_pointers.accessible=用户可访问
settings.lfs_pointers.associateAccessible=关联可访问的 %d OID
settings.rename_branch_failed_exist=无法重命名分支，因为目标分支 %s 存在。
settings.rename_branch_failed_not_exist=无法重命名分支 %s ，因为它不存在。
settings.rename_branch_success=分支 %s 已成功重命名为 %s。
settings.rename_branch_from=旧分支名称
settings.rename_branch_to=新分支名称
settings.rename_branch=重命名分支

diff.browse_source=浏览代码
diff.parent=父节点
diff.commit=当前提交
diff.git-notes=Notes
diff.data_not_available=比较内容不可用
diff.options_button=Diff 选项
diff.show_diff_stats=显示统计
diff.download_patch=下载 Patch 文件
diff.download_diff=下载 Diff 文件
diff.show_split_view=分列视图
diff.show_unified_view=合并视图
diff.whitespace_button=空白符号
diff.whitespace_show_everything=显示所有更改
diff.whitespace_ignore_all_whitespace=比较行时忽略空白符号
diff.whitespace_ignore_amount_changes=忽略空白符号数量的变化
diff.whitespace_ignore_at_eol=忽略行末空白符号的更改
diff.stats_desc=共有 <strong> %d 个文件被更改</strong>，包括 <strong>%d 次插入</strong> 和 <strong>%d 次删除</strong>
diff.stats_desc_file=变更 %d 行：新增 %d 行，删除  %d 行
diff.bin=二进制
diff.bin_not_shown=二进制文件未显示。
diff.view_file=查看文件
diff.file_before=之前
diff.file_after=之后
diff.file_image_width=宽度
diff.file_image_height=高度
diff.file_byte_size=大小
diff.file_suppressed=文件差异内容过多而无法显示
diff.file_suppressed_line_too_long=文件差异因一行或多行过长而隐藏
diff.too_many_files=某些文件未显示，因为此 diff 中更改的文件太多
diff.show_more=显示更多
diff.load=加载差异
diff.generated=自动生成的
diff.vendored=vendored
diff.comment.placeholder=留下评论
diff.comment.markdown_info=支持使用Markdown格式。
diff.comment.add_single_comment=添加单条评论
diff.comment.add_review_comment=添加评论
diff.comment.start_review=开始评审
diff.comment.reply=回复
diff.review=评审
diff.review.header=提交评审
diff.review.placeholder=评审意见
diff.review.comment=评论
diff.review.approve=通过
diff.review.reject=请求变更
diff.committed_by=提交者
diff.protected=受保护的
diff.image.side_by_side=双排
diff.image.swipe=滑动
diff.image.overlay=叠加
diff.has_escaped=这一行有隐藏的 Unicode 字符

releases.desc=跟踪项目版本和下载。
release.releases=版本发布
release.detail=发布详情
release.tags=Git标签
release.new_release=发布新版
release.draft=草稿
release.prerelease=预发行
release.stable=稳定
release.compare=比较
release.edit=编辑
release.ahead.commits=<strong>%d</strong> 次提交
release.ahead.target=在此版本发布后被加入到 %s
release.source_code=源代码
release.new_subheader=版本发布组织项目的版本。
release.edit_subheader=版本发布组织项目的版本。
release.tag_name=标签名称
release.target=目标分支
release.tag_helper=选择一个存在的标签或者创建新标签。
release.title=标题
release.content=密钥文本
release.prerelease_desc=标记为预发行
release.prerelease_helper=标记此版本不适合生产使用。
release.cancel=取消
release.publish=发布版本
release.save_draft=保存草稿
release.edit_release=保存此次发布
release.delete_release=删除发布
release.delete_tag=删除 Git标签
release.deletion=删除发布
release.deletion_desc=删除一个版本发布只会将此发布从 Gitea 中删除。Git标签、仓库内容和历史都保持不变。继续？
release.deletion_success=Release已被删除。
release.deletion_tag_desc=将从仓库中删除此 Git标签。仓库内容和历史记录保持不变。继续吗？
release.deletion_tag_success=该 Git标签 已经被删除
release.tag_name_already_exist=使用此标签名称的发布版本已经存在。
release.tag_name_invalid=标签名称无效。
release.tag_name_protected=Git标签名称已受保护。
release.tag_already_exist=此 Git标签 名称已存在
release.downloads=下载附件
release.download_count=下载：%s
release.add_tag_msg=使用发布的标题和内容作为标签消息。
release.add_tag=仅创建标签

branch.name=分支名称
branch.search=搜索分支
branch.already_exists=名为 '%s' 的分支已存在。
branch.delete_head=刪除
branch.delete=删除分支 '%s'
branch.delete_html=删除分支
branch.delete_desc=删除分支是永久的。此操作 <strong>无法</strong> 撤销，继续？
branch.deletion_success=分支 '%s' 已被删除。
branch.deletion_failed=删除分支 '%s' 失败。
branch.delete_branch_has_new_commits=因为合并之后有新的提交，分支 %s 无法被删除。
branch.create_branch=创建分支 <strong>%s</strong>
branch.create_from=从 '%s'
branch.create_success=分支 '%s' 已创建。
branch.branch_already_exists=此仓库已存在名为 '%s' 的分支。
branch.branch_name_conflict=分支 '%s' 与已存在的分支 '%s' 名称冲突。
branch.tag_collision=分支 '%s' 不能被创建因为同名的标签已经存在。
branch.deleted_by=删除人：%s
branch.restore_success=分支 '%s' 已恢复。
branch.restore_failed=未能还原分支%s。
branch.protected_deletion_failed=分支 '%s' 已被保护，不可删除。
branch.default_deletion_failed=分支 %s 是默认分支，不能删除。
branch.restore=恢复分支 '%s'
branch.download=下载分支 '%s'
branch.included_desc=此分支是默认分支的一部分
branch.included=已包含
branch.create_new_branch=从下列分支创建分支：
branch.confirm_create_branch=创建分支
branch.create_branch_operation=创建分支
branch.new_branch=创建新分支
branch.new_branch_from=从 %s 创建新分支
branch.renamed=分支 %s 被重命名为 %s。

tag.create_tag=创建标签 <strong>%s</strong>
tag.create_tag_operation=创建标签
tag.confirm_create_tag=创建标签
tag.create_tag_from=从 "%s" 创建新标签

tag.create_success=标签 '%s' 已创建。

topic.manage_topics=管理主题
topic.done=保存
topic.format_prompt=主题必须以字母或数字开头，可以包含连字符 (-)，并且长度不得超过35个字符

find_file.go_to_file=转到文件
find_file.no_matching=没有找到匹配的文件

error.csv.too_large=无法渲染此文件，因为它太大了。
error.csv.unexpected=无法渲染此文件，因为它包含了意外字符，其位于第 %d 行和第 %d 列。
error.csv.invalid_field_count=无法渲染此文件，因为它在第 %d 行中的字段数有误。

[org]
org_name_holder=组织名称
org_full_name_holder=组织全名
org_name_helper=组织名字应该简单明了。
create_org=创建组织
repo_updated=最后更新于
members=成员
teams=组织团队
code=代码
lower_members=名成员
lower_repositories=个仓库
create_new_team=新建团队
create_team=创建团队
org_desc=组织描述
team_name=团队名称
team_desc=组织描述
team_name_helper=团队名字应该简单明了。
team_desc_helper=描述团队的目的或作用。
team_access_desc=仓库权限
team_permission_desc=权限
team_unit_desc=允许访问仓库单元
team_unit_disabled=(已禁用)

form.name_reserved=组织名称 '%s' 是被保留的。
form.name_pattern_not_allowed=仓库名称中不允许使用 "%s"。
form.create_org_not_allowed=此账号禁止创建组织

settings=组织设置
settings.options=组织
settings.full_name=组织全名
settings.website=网站
settings.location=所在地区
settings.permission=权限
settings.repoadminchangeteam=仓库管理员可以添加或移除团队的访问权限
settings.visibility=可见性
settings.visibility.public=公开
settings.visibility.limited=受限 (仅对登录用户可见)
settings.visibility.limited_shortname=受限
settings.visibility.private=私有 (仅对组织成员可见)
settings.visibility.private_shortname=私有库

settings.update_settings=更新组织设置
settings.update_setting_success=组织设置已更新。
settings.change_orgname_prompt=注意：修改组织名称将会同时修改对应的URL。
settings.change_orgname_redirect_prompt=在被人使用前，旧用户名将会被重定向。
settings.update_avatar_success=组织头像已经更新。
settings.delete=删除组织
settings.delete_account=删除当前组织
settings.delete_prompt=删除操作会永久清除该组织的信息，并且 <strong>不可恢复</strong>！
settings.confirm_delete_account=确认删除组织
settings.delete_org_title=删除组织
settings.delete_org_desc=此组织将会被永久删除，确认继续吗？
settings.hooks_desc=在此处添加的 Web 钩子将会应用到该组织下的 <strong>所有仓库</strong>。

settings.labels_desc=添加能够被该组织下的 <strong>所有仓库</strong> 的工单使用的标签。

members.membership_visibility=成员可见性：
members.public=可见
members.public_helper=隐藏
members.private=隐藏
members.private_helper=显示
members.member_role=成员角色：
members.owner=管理员
members.member=普通成员
members.remove=移除成员
members.remove.detail=从 %[2]s 中移除 %[1]s 吗？
members.leave=离开组织
members.leave.detail=离开 %s？
members.invite_desc=邀请新的用户加入 %s：
members.invite_now=立即邀请

teams.join=加入团队
teams.leave=离开组织
teams.leave.detail=离开 %s？
teams.can_create_org_repo=创建仓库
teams.can_create_org_repo_helper=成员可以在组织中创建仓库。创建者将自动获得创建的仓库的管理员权限。
teams.none_access=无访问权限
teams.general_access=常规访问
teams.general_access_helper=成员权限将由以下权限表决定。
teams.read_access=已读消息
teams.read_access_helper=成员可以查看和克隆团队仓库。
teams.write_access=写入
teams.write_access_helper=成员可以查看和推送提交到团队仓库。
teams.admin_access=管理员权限
teams.admin_access_helper=成员可以拉取和推送到团队仓库同时可以添加协作者。
teams.no_desc=该团队暂无描述
teams.settings=组织设置
teams.owners_permission_desc=管理员团队对 <strong>所有仓库</strong> 具有操作权限，且对组织具有 <strong>管理员权限</strong>。
teams.members=团队成员
teams.update_settings=更新组织设置
teams.delete_team=删除团队
teams.add_team_member=添加团队成员
teams.invite_team_member=邀请加入 %s
teams.invite_team_member.list=待处理的邀请
teams.delete_team_title=删除团队
teams.delete_team_desc=删除一个团队将删除团队成员的访问权限，继续？
teams.delete_team_success=该团队已被删除。
teams.read_permission_desc=该团队拥有对所属仓库的 <strong>读取</strong> 权限，团队成员可以进行查看和克隆等只读操作。
teams.write_permission_desc=该团队拥有对所属仓库的 <strong>读取</strong> 和 <strong>写入</strong> 的权限。
teams.admin_permission_desc=该团队拥有一定的 <strong>管理</strong> 权限，团队成员可以读取、克隆、推送以及添加其它仓库协作者。
teams.create_repo_permission_desc=此外，该团队拥有了 <strong>创建仓库</strong> 的权限：成员可以在组织中创建新的仓库。
teams.repositories=团队仓库
teams.search_repo_placeholder=搜索仓库...
teams.remove_all_repos_title=移除所有团队仓库
teams.remove_all_repos_desc=这将从团队中移除所有仓库。
teams.add_all_repos_title=添加所有仓库
teams.add_all_repos_desc=这将把组织的所有仓库添加到团队。
teams.add_nonexistent_repo="您尝试添加到团队的仓库不存在，请先创建仓库！"
teams.add_duplicate_users=用户已经是团队成员。
teams.repos.none=此团队无法访问任何仓库。
teams.members.none=团队中没有成员。
teams.specific_repositories=指定仓库
teams.specific_repositories_helper=团队成员将只能访问添加到团队的仓库。 选择此项 <strong>将不会</strong> 自动删除已经添加的仓库。
teams.all_repositories=所有仓库
teams.all_repositories_helper=团队可以访问所有仓库。选择此选项将 <strong>添加所有现有的</strong> 仓库到指定团队。
teams.all_repositories_read_permission_desc=此团队授予<strong>读取</strong><strong>所有仓库</strong>的访问权限: 成员可以查看和克隆仓库。
teams.all_repositories_write_permission_desc=此团队授予<strong>修改</strong><strong>所有仓库</strong>的访问权限: 成员可以查看和推送至仓库。
teams.all_repositories_admin_permission_desc=该团队拥有 <strong>管理</strong> <strong>所有仓库</strong>的权限：团队成员可以读取、克隆、推送以及添加其它仓库协作者。
teams.invite.title=您已被邀请加入组织 <strong>%s</strong> 中的团队 <strong>%s</strong>。
teams.invite.by=邀请人 %s
teams.invite.description=请点击下面的按钮加入团队。

[admin]
dashboard=管理面板
users=帐户管理
organizations=组织管理
repositories=仓库管理
hooks=Web 钩子
authentication=认证源
emails=用户邮件
config=应用配置
notices=系统提示
monitor=监控面板
first_page=首页
last_page=末页
total=总计：%d

dashboard.new_version_hint="Gitea %s 现已可用，您正在运行 %s。查看 <a target=\"_blank\" rel=\"noreferrer\" href=\"https://blog.gitea.io\">博客</a> 了解更多详情。"
dashboard.statistic=摘要
dashboard.operations=维护操作
dashboard.system_status=系统状态
dashboard.statistic_info=此 Gitea 数据库有 <b>%d</b> 位用户、<b>%d</b> 家组织、 <b>%d</b> 枚公钥、<b>%d</b> 个仓库、<b>%d</b> 个仓库关注、<b>%d</b> 个星标、~<b>%d</b> 个操作、 <b>%d</b> 次访问、<b>%d</b> 张工单、 <b>%d</b> 条评论、 <b>%d</b> 个社交账户、<b>%d</b> 个用户关注、<b>%d</b> 个镜像、<b>%d</b> 个发布、<b>%d</b> 个验证源、<b>%d</b> 个 webhooks、<b>%d</b> 个里程碑、 <b>%d</b> 个标签、<b>%d</b> 个 hook 任务、 <b>%d</b> 支团队、<b>%d</b> 个更新任务、<b>%d</b> 个附件。
dashboard.operation_name=操作名称
dashboard.operation_switch=开关
dashboard.operation_run=执行
dashboard.clean_unbind_oauth=清理未绑定的 OAuth 连接
dashboard.clean_unbind_oauth_success=所有未绑定的 OAuth 连接已被删除。
dashboard.task.started=已开始任务：%[1]s
dashboard.task.process=任务: %[1]s
dashboard.task.cancelled=任务: %[1]s 已取消: %[3]s
dashboard.task.error=任务中的错误: %[1]s: %[3]s
dashboard.task.finished=任务: %[2]s 启动的 %[1]s 已完成
dashboard.task.unknown=未知任务： %[1]s
dashboard.cron.started=已开始计划任务：%[1]s
dashboard.cron.process=计划任务：%[1]s
dashboard.cron.cancelled=任务: %s 取消: %[3]s
dashboard.cron.error=任务中的错误： %s: %[3]s
dashboard.cron.finished=任务：%[1]s 已经完成
dashboard.delete_inactive_accounts=删除所有未激活的帐户
dashboard.delete_inactive_accounts.started=删除所有未激活的账户任务已启动。
dashboard.delete_repo_archives="删除所有代码库的存档 (ZIP、 TAR、GZ, 等...)"
dashboard.delete_repo_archives.started=删除所有仓库存档任务已启动。
dashboard.delete_missing_repos=删除所有丢失 Git 文件的仓库
dashboard.delete_missing_repos.started=删除所有丢失 Git 文件的仓库任务已启动。
dashboard.delete_generated_repository_avatars=删除生成的仓库头像
dashboard.update_mirrors=更新镜像仓库
dashboard.repo_health_check=健康检查所有仓库
dashboard.check_repo_stats=检查所有仓库统计
dashboard.archive_cleanup=删除旧的仓库存档
dashboard.deleted_branches_cleanup=清理已删除的分支
dashboard.update_migration_poster_id=更新迁移的发表者ID
dashboard.git_gc_repos=对仓库进行垃圾回收
dashboard.resync_all_sshkeys=使用 Gitea 的 SSH 密钥更新「.ssh/authorized_keys」文件。
dashboard.resync_all_sshkeys.desc=(内置的 SSH 服务器不需要。)
dashboard.resync_all_sshprincipals=使用 Gitea 的 SSH 规则更新「.ssh/authorized_principals」文件。
dashboard.resync_all_sshprincipals.desc=(内置的 SSH 服务器不需要。)
dashboard.resync_all_hooks=重新同步所有仓库的 pre-receive、update 和 post-receive 钩子
dashboard.reinit_missing_repos=重新初始化所有丢失的 Git 仓库存在的记录
dashboard.sync_external_users=同步外部用户数据
dashboard.cleanup_hook_task_table=清理 hook_task 表
dashboard.cleanup_packages=清理过期的软件包
dashboard.server_uptime=服务运行时间
dashboard.current_goroutine=当前 Goroutines 数量
dashboard.current_memory_usage=当前内存使用量
dashboard.total_memory_allocated=所有被分配的内存
dashboard.memory_obtained=内存占用量
dashboard.pointer_lookup_times=指针查找次数
dashboard.memory_allocate_times=内存分配次数
dashboard.memory_free_times=内存释放次数
dashboard.current_heap_usage=当前 Heap 内存使用量
dashboard.heap_memory_obtained=Heap 内存占用量
dashboard.heap_memory_idle=Heap 内存空闲量
dashboard.heap_memory_in_use=正在使用的 Heap 内存
dashboard.heap_memory_released=被释放的 Heap 内存
dashboard.heap_objects=Heap 对象数量
dashboard.bootstrap_stack_usage=启动 Stack 使用量
dashboard.stack_memory_obtained=被分配的 Stack 内存
dashboard.mspan_structures_usage=MSpan 结构内存使用量
dashboard.mspan_structures_obtained=被分配的 MSpan 结构内存
dashboard.mcache_structures_usage=MCache 结构内存使用量
dashboard.mcache_structures_obtained=被分配的 MCache 结构内存
dashboard.profiling_bucket_hash_table_obtained=被分配的剖析哈希表内存
dashboard.gc_metadata_obtained=被分配的 GC 元数据内存
dashboard.other_system_allocation_obtained=其它被分配的系统内存
dashboard.next_gc_recycle=下次 GC 内存回收量
dashboard.last_gc_time=距离上次 GC 时间
dashboard.total_gc_time=GC 暂停时间总量
dashboard.total_gc_pause=GC 暂停时间总量
dashboard.last_gc_pause=上次 GC 暂停时间
dashboard.gc_times=GC 执行次数
dashboard.delete_old_actions=从数据库中删除所有旧操作记录
dashboard.delete_old_actions.started=已开始从数据库中删除所有旧操作记录。
dashboard.update_checker=更新检查器
dashboard.delete_old_system_notices=从数据库中删除所有旧系统通知

users.user_manage_panel=用户帐户管理
users.new_account=创建新帐户
users.name=用户名
users.full_name=组织全名
users.activated=已激活
users.admin=管理员
users.restricted=受限
users.2fa=两步验证
users.repos=仓库数
users.created=创建时间
users.last_login=上次登录
users.never_login=从未登录
users.send_register_notify=发送注册通知
users.new_success=帐户 '%s' 已被创建。
users.edit=修改
users.auth_source=认证源
users.local=本地
users.auth_login_name=认证登录名称
users.password_helper=保持密码为空将不更改密码。
users.update_profile_success=该帐户已被更新。
users.edit_account=编辑帐号
users.max_repo_creation=最大仓库数
users.max_repo_creation_desc=（设置为 -1 表示使用全局默认值）
users.is_activated=该用户已被激活
users.prohibit_login=禁用登录
users.is_admin=是管理员
users.is_restricted=受限
users.allow_git_hook=允许创建 Git 钩子
users.allow_git_hook_tooltip=Git 钩子将会被以操作系统用户运行，将会拥有同样的主机访问权限。因此，拥有此特殊的Git 钩子权限将能够访问合修改所有的 Gitea 仓库或者Gitea的数据库。同时也能获得Gitea的管理员权限。
users.allow_import_local=允许导入本地仓库
users.allow_create_organization=允许创建组织
users.update_profile=更新帐户
users.delete_account=删除帐户
users.cannot_delete_self="你不能删除自己"
users.still_own_repo=此用户仍然拥有一个或多个仓库。必须首先删除或转让这些仓库。
users.still_has_org=此用户是组织的成员。必须先从组织中删除用户。
users.purge=清理用户
users.purge_help=强制删除用户和用户拥有的任何仓库、组织和软件包。所有评论也将被删除。
users.still_own_packages=此用户仍然拥有一个或多个软件包。请先删除这些软件包。
users.deletion_success=用户帐户已被删除。
users.reset_2fa=重置两步验证
users.list_status_filter.menu_text=过滤
users.list_status_filter.reset=重置
users.list_status_filter.is_active=激活
users.list_status_filter.not_active=未激活
users.list_status_filter.is_admin=管理员
users.list_status_filter.not_admin=非管理员
users.list_status_filter.is_restricted=受限
users.list_status_filter.not_restricted=不受限
users.list_status_filter.is_prohibit_login=禁止登录
users.list_status_filter.not_prohibit_login=允许登录
users.list_status_filter.is_2fa_enabled=已启用 2FA
users.list_status_filter.not_2fa_enabled=未启用 2FA

emails.email_manage_panel=邮件管理
emails.primary=主要的
emails.activated=已激活
emails.filter_sort.email=电子邮件
emails.filter_sort.email_reverse=电子邮件(逆序)
emails.filter_sort.name=用户名
emails.filter_sort.name_reverse=用户名(倒序)
emails.updated=电子邮件已更新
emails.not_updated=无法更新请求的电子邮件地址： %v
emails.duplicate_active=此电子邮件地址已被另一个用户激活使用。
emails.change_email_header=更新电子邮件属性
emails.change_email_text=您确认要更新这个电子邮件地址吗？

orgs.org_manage_panel=组织管理
orgs.name=名称
orgs.teams=组织团队
orgs.members=成员
orgs.new_orga=创建新的组织

repos.repo_manage_panel=仓库管理
repos.unadopted=未收录仓库
repos.unadopted.no_more=找不到更多未被收录的仓库
repos.owner=管理员
repos.name=名称
repos.private=私有库
repos.watches=关注数
repos.stars=点赞数
repos.forks=派生数
repos.issues=工单数
repos.size=大小

packages.package_manage_panel=软件包管理
packages.total_size=总大小：%s
packages.owner=管理员
packages.creator=创建者
packages.name=名称
packages.version=版本
packages.type=类型
packages.repository=仓库
packages.size=大小
packages.published=已发布

defaulthooks=默认Web钩子
defaulthooks.desc="当某些 Gitea 事件触发时，Web 钩子自动向服务器发出 HTTP POST 请求。这里定义的 Web 钩子是默认配置，将被复制到所有新的仓库中。详情请访问 <a target=\"_blank\" rel=\"noopener\" href=\"https://docs.gitea.io/en-us/webhooks/\">Web 钩子指南</a>。"
defaulthooks.add_webhook=添加默认Web 钩子
defaulthooks.update_webhook=更新默认 Web 钩子

systemhooks=系统 Web 钩子
systemhooks.desc="当某些 Gitea 事件触发时，Web 钩子自动向服务器发出HTTP POST请求。这里定义的 Web 钩子将作用于系统上的所有仓库，所以请考虑这可能带来的任何性能影响。了解详情请访问 <a target=\"_blank\" rel=\"noopener\" href=\"https://docs.gitea.io/en-us/webhooks/\">Web 钩子指南</a>。"
systemhooks.add_webhook=添加系统 Web 钩子
systemhooks.update_webhook=更新系统 Web 钩子

auths.auth_manage_panel=认证源管理
auths.new=添加认证源
auths.name=名称
auths.type=类型
auths.enabled=启用
auths.syncenabled=启用用户同步
auths.updated=最后更新于
auths.auth_type=认证类型
auths.auth_name=认证名称
auths.security_protocol=安全协议
auths.domain=域名
auths.host=主机
auths.port=端口
auths.bind_dn=绑定 DN
auths.bind_password=绑定密码
auths.user_base=用户搜索基准
auths.user_dn=用户 DN
auths.attribute_username=用户名属性
auths.attribute_username_placeholder=置空将使用Gitea的用户名。
auths.attribute_name=名字属性
auths.attribute_surname=姓氏属性
auths.attribute_mail=电子邮箱属性
auths.attribute_ssh_public_key=SSH公钥属性
auths.attribute_avatar=头像属性
auths.attributes_in_bind=从 Bind DN 中拉取属性信息
auths.allow_deactivate_all=允许在搜索结果为空时停用所有用户
auths.use_paged_search=使用分页搜索
auths.search_page_size=分页大小
auths.filter=用户过滤规则
auths.admin_filter=管理员过滤规则
auths.restricted_filter=受限的过滤器
auths.restricted_filter_helper=留空则不将任何用户设置为受限。使用星号('*') 将所有不匹配管理过滤器的用户设置为受限用户。
auths.verify_group_membership=验证 LDAP 组成员资格 (留空过滤器跳过)
auths.group_search_base=群组搜索基础 DN
auths.group_attribute_list_users=包含用户列表的群组属性
auths.user_attribute_in_group=群组中列出的用户属性
auths.map_group_to_team=将 LDAP 组映射到组织团队 (留空字段则跳过)
auths.map_group_to_team_removal=如果用户不属于相应的 LDAP 组，从已同步团队中移除用户
auths.enable_ldap_groups=启用 LDAP 组
auths.ms_ad_sa=MS AD 搜索属性
auths.smtp_auth=SMTP 认证类型
auths.smtphost=SMTP 主机地址
auths.smtpport=SMTP 主机端口
auths.allowed_domains=域名白名单
auths.allowed_domains_helper=置空将允许所有域名，每个域名用逗号分隔。
auths.skip_tls_verify=忽略 TLS 验证
auths.force_smtps=强制 SMTPS
auths.force_smtps_helper=SMTPS 始终用于 465 端口。设置此项会强制其他端口也使用 SMTPS。(否则，如果主机支持，将在其他端口上使用 STARTTLS。)
auths.helo_hostname=HELO 主机名
auths.helo_hostname_helper=用 HELO 发送的主机名。 留空发送当前主机名。
auths.disable_helo=禁用 HELO
auths.pam_service_name=PAM 服务名称
auths.pam_email_domain=PAM 电子邮件域(可选)
auths.oauth2_provider=OAuth2 提供程序
auths.oauth2_icon_url=图标 URL
auths.oauth2_clientID=客户端 ID （键）
auths.oauth2_clientSecret=客户端密钥
auths.openIdConnectAutoDiscoveryURL=OpenID 连接自动发现 URL
auths.oauth2_use_custom_url=使用自定义的 URL 而不是默认的 URL
auths.oauth2_tokenURL=令牌 URL
auths.oauth2_authURL=授权 URL
auths.oauth2_profileURL=Profile URL
auths.oauth2_emailURL=电子邮件 URL
auths.skip_local_two_fa=跳过本地两步验证
auths.skip_local_two_fa_helper=不设置意味着设置了两步验证的本地用户仍然需要通过两步验证才能登录
auths.oauth2_tenant=租户
auths.oauth2_scopes=附加授权范围（Scopes）
auths.oauth2_required_claim_name=必须填写 Claim 声明的名称
auths.oauth2_required_claim_name_helper=设置此名称，只有具有此名称的声明（Claim）的用户可从此源登录
auths.oauth2_required_claim_value=必须填写 Claim 声明的值
auths.oauth2_required_claim_value_helper=设置此值，只有拥有对应的声明（Claim）的名称和值的用户才被允许从此源登录
auths.oauth2_group_claim_name=用于提供用户组名称的 Claim 声明名称。(可选)
auths.oauth2_admin_group=管理员用户组的 Claim 声明值。(可选 - 需要上面的声明名称)
auths.oauth2_restricted_group=受限用户组的 Claim 声明值。(可选 - 需要上面的声明名称)
auths.enable_auto_register=允许用户自动注册
auths.sspi_auto_create_users=自动创建用户
auths.sspi_auto_create_users_helper=允许 SSPI 认证在用户第一次登录时自动创建新账号
auths.sspi_auto_activate_users=自动激活用户
auths.sspi_auto_activate_users_helper=允许 SSPI 认证自动激活新用户
auths.sspi_strip_domain_names=从用户名中删除域名部分
auths.sspi_strip_domain_names_helper=如果选中此项，域名将从登录名中删除(例如，"DOMAIN\user"和"user@example.org"，两者都将变成只是“用户”)。
auths.sspi_separator_replacement=要使用的分隔符代替\, / 和 @
auths.sspi_separator_replacement_helper=用于替换下级登录名称分隔符的字符 (例如) "DOMAIN\user") 中的 \ 和用户主名字(如"user@example.org中的 @ )。
auths.sspi_default_language=默认语言
auths.sspi_default_language_helper=SSPI 认证方法为用户自动创建的默认语言。如果您想要自动检测到语言，请留空。
auths.tips=帮助提示
auths.tips.oauth2.general=OAuth2 认证
auths.tips.oauth2.general.tip=当注册一个新的 OAuth2 认证，回调/重定向 URL 应该是： <host>/user/oauth2/<Authentication Name>/callback
auths.tip.oauth2_provider=OAuth2 提供程序
auths.tip.bitbucket=在 https://bitbucket.org/account/user/<your username>/oauth-consumers/new 注册新的 OAuth 消费者同时添加权限"帐户"-"读"
auths.tip.nextcloud=使用下面的菜单“设置（Settings） -> 安全（Security） -> OAuth 2.0 client”在您的实例上注册一个新的 OAuth 客户端。
auths.tip.dropbox=在 https://www.dropbox.com/developers/apps 上创建一个新的应用程序
auths.tip.facebook=在 https://developers.facebook.com/apps 注册一个新的应用，并添加产品"Facebook 登录"
auths.tip.github=在 https://github.com/settings/applications/new 注册一个 OAuth 应用程序
auths.tip.gitlab=在 https://gitlab.com/profile/applications 上注册新应用程序
auths.tip.google_plus=从谷歌 API 控制台 (https://console.developers.google.com/) 获得 OAuth2 客户端凭据
auths.tip.openid_connect=使用 OpenID 连接发现 URL (<server>/.well-known/openid-configuration) 来指定终点
auths.tip.twitter=访问 https://dev.twitter.com/apps，创建应用并确保启用了"允许此应用程序用于登录 Twitter"的选项。
auths.tip.discord=在 https://discordapp.com/developers/applications/me 上注册新应用程序
auths.tip.gitea=注册一个新的 OAuth2 应用程序，可以访问 https://docs.gitea.io/en-us/oauth2-provider/ 查看帮助 。
auths.tip.yandex=在 https://oauth.yandex.com/client/new 上创建一个新的应用程序。在“ Yandex.Passport API”这部分中选择以下权限：“访问电子邮件地址（Access to email address）”，“访问用户头像（Access to user avatar）”和“访问用户名，名字和姓氏，性别（Access to username, first name and surname, genderAccess to username, first name and surname, gender）”
auths.tip.mastodon=输入您想要认证的 mastodon 实例的自定义 URL (或使用默认值)
auths.edit=修改认证源
auths.activated=该认证源已经启用
auths.new_success=已添加身份验证 '%s'。
auths.update_success=认证源已经更新。
auths.update=更新认证源
auths.delete=删除身份验证源
auths.delete_auth_title=删除身份验证源
auths.delete_auth_desc=删除一个认证源将阻止使用它进行登录。确认？
auths.still_in_used=认证源仍在使用。请先解除或者删除使用此认证源的用户。
auths.deletion_success=认证源已经更新。
auths.login_source_exist=认证源 '%s' 已经存在。
auths.login_source_of_type_exist=此类型的认证源已存在。

config.server_config=服务器配置
config.app_name=站点名称
config.app_ver=Gitea版本
config.app_url=Gitea 基本 URL
config.custom_conf=配置文件路径
config.custom_file_root_path="自定义文件根路径"
config.domain=服务器域名
config.offline_mode=离线模式
config.disable_router_log=关闭路由日志
config.run_user=以用户名运行
config.run_mode=运行模式
config.git_version=Git 版本
config.repo_root_path=仓库根目录
config.lfs_root_path=LFS根目录
config.static_file_root_path=静态文件根目录
config.log_file_root_path=日志路径
config.script_type=脚本类型
config.reverse_auth_user=反向代理认证

config.ssh_config=SSH 配置
config.ssh_enabled=启用
config.ssh_start_builtin_server=使用内置 SSH 服务器
config.ssh_domain=SSH 服务器域名
config.ssh_port=端口
config.ssh_listen_port=监听端口
config.ssh_root_path=根目录
config.ssh_key_test_path=密钥测试路径
config.ssh_keygen_path=密钥生成器（'ssh-keygen'）路径
config.ssh_minimum_key_size_check=密钥最小长度检查
config.ssh_minimum_key_sizes=密钥最小长度限制

config.lfs_config=LFS 配置
config.lfs_enabled=启用
config.lfs_content_path=LFS 内容存放目录
config.lfs_http_auth_expiry=LFS HTTP 身份验证过期时间

config.db_config=数据库配置
config.db_type=类型
config.db_host=主机
config.db_name=名称
config.db_user=用户名
config.db_schema=架构模式
config.db_ssl_mode=SSL
config.db_path=数据库路径

config.service_config=服务配置
config.register_email_confirm=需要电子邮件确认注册
config.disable_register=禁止用户注册
config.allow_only_internal_registration=只允许通过 Gitea 进行注册
config.allow_only_external_registration=仅允许通过外部服务注册
config.enable_openid_signup=启用 OpenID 自注册
config.enable_openid_signin=启用 OpenID 登录
config.show_registration_button=显示注册按钮
config.require_sign_in_view=启用登录访问限制
config.mail_notify=启用邮件通知
config.disable_key_size_check=禁用密钥最小长度检查
config.enable_captcha=启用登录验证码
config.active_code_lives=激活用户链接有效期
config.reset_password_code_lives=恢复账户验证码过期时间
config.default_keep_email_private=默认情况下隐藏电子邮件地址
config.default_allow_create_organization=默认情况下允许创建组织
config.enable_timetracking=启用时间跟踪
config.default_enable_timetracking=默认情况下启用时间跟踪
config.default_allow_only_contributors_to_track_time=仅允许成员跟踪时间
config.no_reply_address=隐藏电子邮件域
config.default_visibility_organization=新组织的默认可见性
config.default_enable_dependencies=默认情况下启用工单依赖

config.webhook_config=Web 钩子配置
config.queue_length=队列长度
config.deliver_timeout=推送超时
config.skip_tls_verify=跳过 TLS 验证

config.mailer_config=Mailer 配置
config.mailer_enabled=启用
config.mailer_enable_helo=启用HELO
config.mailer_name=名称
config.mailer_protocol=协议
config.mailer_smtp_addr=SMTP 地址
config.mailer_smtp_port=SMTP 主机端口
config.mailer_user=发送者帐号
config.mailer_use_sendmail=使用 Sendmail
config.mailer_sendmail_path=Sendmail 路径
config.mailer_sendmail_args=Sendmail 的额外参数
config.mailer_sendmail_timeout=Sendmail 超时
config.mailer_use_dummy=Dummy
config.test_email_placeholder=电子邮址 (例如，test@example.com)
config.send_test_mail=发送测试邮件
config.test_mail_failed=发送测试邮件至 '%s' 时失败：%v
config.test_mail_sent=测试邮件已经发送至 '%s'。

config.oauth_config=OAuth 配置
config.oauth_enabled=启用

config.cache_config=Cache 配置
config.cache_adapter=Cache 适配器
config.cache_interval=Cache 周期
config.cache_conn=Cache 连接字符串
config.cache_item_ttl=缓存项目 TTL

config.session_config=Session 配置
config.session_provider=Session 提供者
config.provider_config=提供者配置
config.cookie_name=Cookie 名称
config.gc_interval_time=GC 周期
config.session_life_time=Session 生命周期
config.https_only=仅限 HTTPS
config.cookie_life_time=Cookie 生命周期

config.picture_config=图片和头像配置
config.picture_service=图片服务
config.disable_gravatar=禁用 Gravatar 头像
config.enable_federated_avatar=启用 Federated Avatars

config.git_config=Git 配置
config.git_disable_diff_highlight=禁用差异对比语法高亮
config.git_max_diff_lines=差异对比显示的最大行数（单个文件）
config.git_max_diff_line_characters=差异对比显示的最大字符数（单行）
config.git_max_diff_files=差异对比显示的最大文件数
config.git_gc_args=GC 参数
config.git_migrate_timeout=迁移操作超时
config.git_mirror_timeout=镜像更新操作超时
config.git_clone_timeout=克隆操作超时
config.git_pull_timeout=拉取操作超时
config.git_gc_timeout=GC 操作超时

config.log_config=日志配置
config.log_mode=日志模式
config.own_named_logger=命名日志
config.routes_to_default_logger=路由到默认日志
config.go_log=使用 Go 日志（重定向至默认记录器）
config.router_log_mode=路由日志模式
config.disabled_logger=禁用
config.access_log_mode=访问日志模式
config.access_log_template=模板
config.xorm_log_mode=XORM 日志模式
config.xorm_log_sql=日志 SQL

config.get_setting_failed=获取设置 %s 失败
config.set_setting_failed=设置 %s 失败

monitor.cron=Cron 任务
monitor.name=名称
monitor.schedule=任务安排
monitor.next=下次执行时间
monitor.previous=上次执行时间
monitor.execute_times=执行次数
monitor.process=运行中进程
monitor.stacktrace=调用栈踪迹
monitor.goroutines=%d 个 Goroutine
monitor.desc=组织描述
monitor.start=开始时间
monitor.execute_time=执行时长
monitor.last_execution_result=结果
monitor.process.cancel=中止进程
monitor.process.cancel_desc=中止一个进程可能导致数据丢失
monitor.process.cancel_notices=中止：<strong>%s</strong> ？
monitor.process.children=子进程
monitor.queues=队列
monitor.queue=队列： %s
monitor.queue.name=名称
monitor.queue.type=类型
monitor.queue.exemplar=数据类型
monitor.queue.numberworkers=工作者数量
monitor.queue.maxnumberworkers=最大工作者数量
monitor.queue.numberinqueue=队列中的数量
monitor.queue.review=查看配置
monitor.queue.review_add=查看/添加工作者
monitor.queue.configuration=初始配置
monitor.queue.nopool.title=没有工作者池
monitor.queue.nopool.desc=此队列包装其它队列，本身没有工作者池。
monitor.queue.wrapped.desc=一个包装队列包装一个启动缓慢队列，缓存队列请求到 channel 中。它本身没有一个工作者池。
monitor.queue.persistable-channel.desc=一个 persistable-channel 队列包装2个队列，一个 channel 队列拥有自己的工作者池，一个 level 队列用于永久存储。它没有自己的工作者池。
monitor.queue.flush=Flush worker
monitor.queue.pool.timeout=超时
monitor.queue.pool.addworkers.title=新增工作者
monitor.queue.pool.addworkers.submit=新增工作者
monitor.queue.pool.addworkers.desc=添加工作者到此池中。如果你设置了超时，这些工作者将会在超时结束后从池中移除。
monitor.queue.pool.addworkers.numberworkers.placeholder=工作者数量
monitor.queue.pool.addworkers.timeout.placeholder=设置为0则无超时
monitor.queue.pool.addworkers.mustnumbergreaterzero=要添加的工作者数量必须大于等于0
monitor.queue.pool.addworkers.musttimeoutduration=超时时间必须为Go语言时间间隔。例如 5m 或者 0
monitor.queue.pool.flush.title=刷新队列
monitor.queue.pool.flush.desc=刷新将添加一个工作者，一旦队列为空或超时将结束。
monitor.queue.pool.flush.submit=添加刷新者
monitor.queue.pool.flush.added=为 %[1]s 添加刷新工作者
monitor.queue.pool.pause.title=暂停队列
monitor.queue.pool.pause.desc=暂停队列将阻止它处理数据
monitor.queue.pool.pause.submit=暂停队列
monitor.queue.pool.resume.title=恢复队列
monitor.queue.pool.resume.desc=使此队列恢复工作
monitor.queue.pool.resume.submit=恢复队列

monitor.queue.settings.title=池设置
monitor.queue.settings.desc=池动态增长以应对队列阻塞。这些变更将不会影响当前的工作者组。
monitor.queue.settings.timeout=提高超时时间
monitor.queue.settings.timeout.placeholder=当前 %[1]v
monitor.queue.settings.timeout.error=超时时间必须为Go语言时间间隔。例如 5m 或者 0
monitor.queue.settings.numberworkers=提高工作者数量
monitor.queue.settings.numberworkers.placeholder=当前 %[1]d
monitor.queue.settings.numberworkers.error=要添加的工作者数量必须大于等于0
monitor.queue.settings.maxnumberworkers=最大工作者数量
monitor.queue.settings.maxnumberworkers.placeholder=当前 %[1]d
monitor.queue.settings.maxnumberworkers.error=最大工作者数必须是数字
monitor.queue.settings.submit=更新组织设置
monitor.queue.settings.changed=设置已更新
monitor.queue.settings.blocktimeout=当前阻塞超时时间
monitor.queue.settings.blocktimeout.value=%[1]v

monitor.queue.pool.none=此队列没有工作者池
monitor.queue.pool.added=工作者组添加成功
monitor.queue.pool.max_changed=最大工作者数量已更改
monitor.queue.pool.workers.title=活跃的工作者组
monitor.queue.pool.workers.none=没有工作者组。
monitor.queue.pool.cancel=停止工作者组
monitor.queue.pool.cancelling=工作者组正在关闭
monitor.queue.pool.cancel_notices=关掉这组 %s 工作者吗？
monitor.queue.pool.cancel_desc=没有工作者组的队列将会引起请求永久阻塞。

notices.system_notice_list=系统提示
notices.view_detail_header=查看提示详情
notices.select_all=选中全部
notices.deselect_all=取消全选
notices.inverse_selection=反向选中
notices.delete_selected=删除选中项
notices.delete_all=删除所有提示
notices.type=类型
notices.type_1=仓库
notices.type_2=任务
notices.desc=组织描述
notices.op=操作
notices.delete_success=系统通知已被删除。

[action]
create_repo="创建了仓库 <a href=\"%s\">%s</a>"
rename_repo="重命名仓库 <code>%[1]s</code> 为 <a href=\"%[2]s\">%[3]s</a>"
commit_repo="推送到了仓库 <a href=\"%[1]s\">%[4]s</a> 的 <a href=\"%[2]s\">%[3]s</a> 分支"
create_issue="`创建了工单 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
close_issue="`关闭了工单 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
reopen_issue="`重新开启了工单 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
create_pull_request="`创建了合并请求 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
close_pull_request="`关闭了合并请求 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
reopen_pull_request="`重新开启了合并请求 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
comment_issue="`评论了工单 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
comment_pull="`评论了合并请求 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
merge_pull_request="`合并了合并请求 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
auto_merge_pull_request="`自动合并了拉取请求 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
transfer_repo="将仓库 <code>%s</code> 转移至 <a href=\"%s\">%s</a>"
push_tag="推送了标签 <a href=\"%[2]s\">%[3]s</a> 至仓库 <a href=\"%[1]s\">%[4]s</a>"
delete_tag="从<a href=\"%[1]s\">%[3]s</a> 删除了标签 %[2]s"
delete_branch="从 <a href=\"%[1]s\">%[3]s</a> 删除分支 %[2]s"
compare_branch=比较
compare_commits=比较 %d 提交
compare_commits_general=比较提交
mirror_sync_push="从镜像同步了提交至仓库 <a href=\"%[1]s\">%[4]s</a> 的 <a href=\"%[2]s\">%[3]s</a> 分支"
mirror_sync_create="从镜像同步了引用 <a href=\"%[2]s\">%[3]s</a> 至仓库 <a href=\"%[1]s\">%[4]s</a>"
mirror_sync_delete="从镜像同步并从 <a href=\"%[1]s\">%[3]s</a> 删除了引用 <code>%[2]s</code>"
approve_pull_request="`批准了 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
reject_pull_request="`建议变更 <a href=\"%[1]s\">%[3]s#%[2]s</a>`"
publish_release="`在 <a href=\"%[1]s\">%[3]s</a> 发布了 <a href=\"%[2]s\"> \"%[4]s\" </a>`"
review_dismissed="`取消了 <b>%[4]s</b> 对 <a href=\"%[1]s\">%[3]s#%[2]s</a> 的变更请求`"
review_dismissed_reason=原因：
create_branch="于 <a href=\"%[1]s\">%[4]s</a> 创建了分支 <a href=\"%[2]s\">%[3]s</a>"
starred_repo="点赞了 <a href=\"%[1]s\">%[2]s</a>"
watched_repo="开始关注 <a href=\"%[1]s\">%[2]s</a>"

[tool]
ago=%s前
from_now=%s 之后
now=现在
future=将来
1s=1 秒
1m=1分钟
1h=1 小时
1d=1 天
1w=1周
1mon=1 个月
1y=1年
seconds=%d 秒
minutes=%d 分钟
hours=%d 小时
days=%d 天
weeks=%d 周
months=%d 个月
years=%d 年
raw_seconds=秒
raw_minutes=分钟

[dropzone]
default_message=拖动文件或者点击此处上传。
file_too_big=文件体积（{{filesize}} MB）超过了最大允许体积（{{maxFilesize}} MB）
remove_file=移除文件

[notification]
notifications=通知
unread=未读消息
read=已读消息
no_unread=没有未读通知。
no_read=没有未读通知。
pin=Pin 通知
mark_as_read=标记为已读
mark_as_unread=标记为未读
mark_all_as_read=全部标记为已读
subscriptions=订阅
watching=关注
no_subscriptions=无订阅

[gpg]
default_key=使用默认密钥签名
error.extract_sign=无法提取签名
error.generate_hash=无法生成提交的哈希
error.no_committer_account=没有帐户链接到提交者的电子邮件
error.no_gpg_keys_found="找不到此签名对应的密钥"
error.not_signed_commit="未签名的提交"
error.failed_retrieval_gpg_keys="找不到任何与该提交者账号相关的密钥"
error.probable_bad_signature="警告！虽然数据库中有一个此ID的密钥，但它没有验证此提交！此提交是有疑问的。"
error.probable_bad_default_signature="警告！虽然默认密钥拥有此ID，但它没有验证此提交！此提交是有疑问的。"

[units]
unit=单元
error.no_unit_allowed_repo=您没有被允许访问此仓库的任何单元。
error.unit_not_allowed=您没有权限访问此仓库单元

[packages]
title=软件包
desc=管理仓库软件包。
empty=还没有软件包。
empty.documentation="关于软件包注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/overview\"> 文档 </a>。"
empty.repo="您上传了一个包，但没有显示在这里吗？转到 <a href=\"%[1]s\">包设置</a> 并将其链接到这个仓库中。"
filter.type=类型
filter.type.all=所有
filter.no_result=您的过滤器没有产生任何结果。
filter.container.tagged=已加标签
filter.container.untagged=未加标签
published_by="由 <a href=\"%[2]s\">%[3]s</a> 发布于 %[1]s"
published_by_in="<a href=\"%[2]s\">%[3]s</a> 于 %[1]s 发布了 <a href=\"%[4]s\"><strong>%[5]s</strong></a>"
installation=安装
about=关于这个软件包
requirements=要求
dependencies=依赖
keywords=关键词
details=详情
details.author=作者
details.project_site=项目站点
details.repository_site=仓库站点
details.documentation_site=文档网站
details.license=许可协议
assets=文件
versions=版本
versions.on=于
versions.view_all=查看全部
dependency.id=ID
dependency.version=版本
cargo.details.repository_site=仓库站点
cargo.details.documentation_site=文档网站
chef.install=要安装包，请运行以下命令：
composer.registry=在您的 <code>~/.composer/config.json</code> 文件中设置此注册中心：
composer.install=要使用 Composer 安装软件包，请运行以下命令：
composer.documentation="关于 Composer 注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/composer/\"> 文档 </a>。"
composer.dependencies=依赖
composer.dependencies.development=开发依赖
conan.details.repository=仓库
conan.registry=从命令行设置此注册中心：
conan.install=要使用 Conan 安装软件包，请运行以下命令：
conan.documentation="关于 Conan 注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/conan/\">文档</a>。"
conda.details.repository_site=仓库站点
conda.details.documentation_site=文档网站
container.details.type=镜像类型
container.details.platform=平台
container.pull=从命令行拉取镜像：
container.digest=摘要：
container.documentation="关于 Container 注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/container/\">文档</a>。"
container.multi_arch=OS / Arch
container.layers=镜像层
container.labels=标签
container.labels.key=键
container.labels.value=值
generic.download=从命令行下载软件包：
generic.documentation="关于通用注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/generic\">文档</a>。"
helm.registry=从命令行设置此注册中心：
helm.install=要安装包，请运行以下命令：
helm.documentation="关于 Helm 注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/helm/\">文档</a>。"
maven.registry=在您项目的 <code>pom.xml</code> 文件中设置此注册中心：
maven.install=要使用这个软件包，在 <code>pom.xml</code> 文件中的 <code>依赖项</code> 块中包含以下内容：
maven.install2=通过命令行运行：
maven.download=要下载依赖项，请通过命令行运行：
maven.documentation="关于 Maven 注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/maven/\">文档</a>。"
nuget.registry=从命令行设置此注册中心：
nuget.install=要使用 Nuget 安装软件包，请运行以下命令：
nuget.documentation="关于 Nuget 注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/nuget/\">文档</a>。"
nuget.dependency.framework=目标框架
npm.registry=在您项目的 <code>.npmrc</code> 文件中设置此注册中心：
npm.install=要使用 npm 安装软件包，请运行以下命令：
npm.install2=或将其添加到 package.json 文件：
npm.documentation="关于 npm 注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/npm/\">文档</a>。"
npm.dependencies=依赖
npm.dependencies.development=开发依赖
npm.dependencies.peer=Peer 依赖
npm.dependencies.optional=可选依赖
npm.details.tag=标签
pub.install=要使用 Dart 安装软件包，请运行以下命令：
pub.documentation="关于 Pub 注册中心的信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/pub/\">文档</a>。"
pypi.requires=需要 Python
pypi.install=要使用 pip 安装软件包，请运行以下命令：
pypi.documentation="关于 PyPI 注册中心的信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/pypi/\">文档</a>。"
rubygems.install=要使用 gem 安装软件包，请运行以下命令：
rubygems.install2=或将它添加到 Gemfile：
rubygems.dependencies.runtime=运行时依赖
rubygems.dependencies.development=开发依赖
rubygems.required.ruby=需要 Ruby 版本
rubygems.required.rubygems=需要 RubyGem 版本
rubygems.documentation="关于 RubyGems 注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/rubygems/\">文档</a>。"
vagrant.install=若要添加一个 Vagrant box，请运行以下命令：
vagrant.documentation="关于 Vagrant 注册中心的更多信息，请参阅 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.gitea.io/en-us/packages/vagrant/\">文档</a>。"
settings.link=将此软件包链接到仓库
settings.link.description=如果您将一个软件包与一个代码库链接起来，软件包将显示在代码库的软件包列表中。
settings.link.select=选择仓库
settings.link.button=更新仓库链接
settings.link.success=仓库链接已成功更新。
settings.link.error=更新仓库链接失败。
settings.delete=删除软件包
settings.delete.description=删除软件包是永久性的，无法撤消。
settings.delete.notice=您将要删除 %s (%s)。此操作是不可逆的，您确定吗？
settings.delete.success=软件包已被删除。
settings.delete.error=删除软件包失败。
owner.settings.cleanuprules.enabled=启用

[secrets]
value=值
name=名称

[actions]
actions=操作



runners.id=ID
runners.name=名称
runners.owner_type=类型
runners.description=组织描述
runners.labels=标签
runners.task_list.run=执行
runners.task_list.repository=仓库
runners.status.active=激活


